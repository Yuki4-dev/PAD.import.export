DateTime.GetCurrentDateTime.Windows DateTimeFormat: DateTime.DateTimeFormat.DateAndTime TimeZoneLocation: DateTime.TimeZoneLocation.TokyoStandardTime CurrentDateTime=> CurrentDateTime
Text.ConvertDateTimeToText.FromCustomDateTime DateTime: CurrentDateTime CustomFormat: $'''yyyyMMdd-hh-dd-ss''' Result=> DateText
SET IsDebug TO 1
IF IsDebug = 1 THEN
    SET CustomFormData['FlowName'] TO $'''Excel2Tabie'''
    SET CustomFormData['OutputDir'] TO $'''C:\\Users\\sanak\\Desktop\\pad'''
ELSE
    @@statistics_Input_Text: '2'
@@statistics_Action_Submit: '1'
Display.ShowCustomDialog CardTemplateJson: '''{
  \"type\": \"AdaptiveCard\",
  \"version\": \"1.4\",
  \"id\": \"AdaptiveCard\",
  \"body\": [
    {
      \"type\": \"Input.Text\",
      \"id\": \"OutputDir\",
      \"label\": \"${OutputDir_Label}\"
    },
    {
      \"type\": \"Input.Text\",
      \"id\": \"FlowName\",
      \"label\": \"${FlowName_Label}\"
    }
  ],
  \"actions\": [
    {
      \"type\": \"Action.Submit\",
      \"id\": \"Submit\",
      \"title\": \"${Submit_Title}\"
    }
  ]
}''' CustomFormData=> CustomFormData ButtonPressed=> ButtonPressed @OutputDir_Label: $'''出力フォルダ''' @FlowName_Label: $'''フロー名''' @Submit_Title: $'''OK'''
END
Scripting.RunJavascript.RunJavascript JavascriptCode: $'''var shell = new ActiveXObject(\"WScript.Shell\");
if (!shell.AppActivate(\"Power Automate | %CustomFormData['FlowName']%\")) {
    WScript.Echo(\"指定されたウィンドウが見つかりません: \" + \"%CustomFormData['FlowName']%\");
}''' ScriptOutput=> JavascriptOutput ScriptError=> ScriptError
UIAutomation.GetWindow.GetForegroundWindow WindowTitle=> WindowTitle WindowInstance=> AutomationWindow
UIAutomation.SetWindowState.SetStateByInstanceOrHandle WindowInstance: AutomationWindow State: UIAutomation.WindowState.Maximized
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Alt}(){Right}{Right}{Right}{Right}{Enter}{Down}{Down}{Down}{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
Folder.Create FolderPath: CustomFormData['OutputDir'] FolderName: $'''%DateText% - %CustomFormData['FlowName']%''' Folder=> Folder
SET CurrentText TO 1
Variables.CreateNewList List=> FlowList
MouseAndKeyboard.MoveMouseToImage.MoveMouseToImage Images: [imgrepo['Main']] SearchForImageOn: MouseAndKeyboard.SearchTarget.ForegroundWindow MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
ON ERROR

END
MouseAndKeyboard.MoveMouseToImage.MoveMouseToImage Images: [imgrepo['Main2']] SearchForImageOn: MouseAndKeyboard.SearchTarget.ForegroundWindow MousePositionOnImage: MouseAndKeyboard.PositionOnImage.MiddleCenter OffsetX: 0 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
ON ERROR

END
MouseAndKeyboard.SendMouseClick.Click ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0
WAIT 1
SET LastFlowName TO $'''Main'''
LOOP LoopIndex FROM 1 TO 100 STEP 1
    IF LoopIndex = 1 THEN
        SET FlowName TO $'''Main'''
    ELSE
        MouseAndKeyboard.MoveMouseToImage.MoveMouseToImage Images: [imgrepo['Line']] SearchForImageOn: MouseAndKeyboard.SearchTarget.ForegroundWindow MousePositionOnImage: MouseAndKeyboard.PositionOnImage.TopCenter OffsetX: -12 OffsetY: 0 Tolerance: 10 MovementStyle: MouseAndKeyboard.MovementStyle.Instant Occurence: 1 Timeout: 5 SearchAlgorithm: MouseAndKeyboard.ImageFinderAlgorithm.Legacy
        MouseAndKeyboard.SendMouseClick.Click ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{F2}{Control}({C})''' DelayBetweenKeystrokes: 1000 SendTextAsHardwareKeys: False
        Clipboard.GetText Text=> FlowName
        WAIT 1
        MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Escape}''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
        IF LastFlowName = FlowName THEN
            EXIT LOOP
        END
        SET LastFlowName TO FlowName
    END
    MouseAndKeyboard.MoveMouse X: 450 Y: 150 RelativeTo: MouseAndKeyboard.PositionRelativeTo.ActiveWindow MovementStyle: MouseAndKeyboard.MovementStyle.Instant
    MouseAndKeyboard.SendMouseClick.Click ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({A}){Control}({C})''' DelayBetweenKeystrokes: 500 SendTextAsHardwareKeys: False
    Clipboard.GetText Text=> FlowText
    Variables.AddItemToList Item: { 'Name': FlowName, 'Text': FlowText } List: FlowList
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Shift}({Tab}){Right}''' DelayBetweenKeystrokes: 500 SendTextAsHardwareKeys: True
    WAIT 1
END
LOOP FOREACH FlowItem IN FlowList
    File.WriteText File: $'''%Folder.FullName%\\%FlowItem['Name']%''' TextToWrite: FlowItem['Text'] AppendNewLine: True IfFileExists: File.IfFileExists.Overwrite Encoding: File.FileEncoding.Unicode
END
SET MetaData TO { 'name': CustomFormData['FlowName'] }
Variables.ConvertCustomObjectToJson CustomObject: MetaData Json=> MetaDataAsJson
File.WriteText File: $'''%Folder.FullName%\\metadata''' TextToWrite: MetaDataAsJson AppendNewLine: True IfFileExists: File.IfFileExists.Overwrite Encoding: File.FileEncoding.Unicode
Display.ShowMessageDialog.ShowMessage Title: $'''完了''' Message: $'''正常に完了しました。：%FlowList.Count%''' Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False

# [ControlRepository][PowerAutomateDesktop]

{
  "ControlRepositorySymbols": [],
  "ImageRepositorySymbol": {
    "Repository": "{\r\n  \"Folders\": [],\r\n  \"Images\": [\r\n    {\r\n      \"Id\": \"53b74cf6-e1e7-481f-b81b-493d7d4b9984\",\r\n      \"Name\": \"Main\",\r\n      \"Screenshot\": \"iVBORw0KGgoAAAANSUhEUgAAAC0AAAAWCAYAAABUpxX0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHESURBVFhH7dK7S0JRHAfw/qR8VJr2gDQ1e9h7srDSMmsrZ2uowR7mZENF0WNIcDBtKly1SWxREJEEFQcNaxL5xvkNoiHppbAMv9P9/c45937OuacNTZi2z41mSAvdqLTQjcr/RT8FAuDz2iGVSpBOpyvGAgE/BHwe1tdMFf1qOTs7xXMo9LnNOZzQikE53G53xdju7g56pJKa6Hw+j5FhNcG/G07oBZ0OBoMehUKB+gwikw1g2WCoif7JcEJfXV1CLOpCLBajvsdzR5vYs1pL6EwmA9PqKoQCPq0xGleQzWYRj8fpjzidtzRPpVRge8uCOa2W5un1SzSvnnBC+/1+6JcWcXF+Tn2zeZM2YrMdltDs9IPBIIrFIhKJF/T39cLlclVFT01OIBwO03u7xSKaV084o2+urzE7M41IJEKgVCpZgWZX5/TkBOPjGkKydQxaDX2wv1/6BquPHY5S/VU4oxmSYbcsFpg3N+hEy9EMrBkbRTKZpJph6kWX11+FM5qFXQtW33u9VJej2fP8nBbvb294fHxAZ4fwb6B9Ph/ksgG85nJUl6Oj0SjUQyp0CAWw24+gVAz+DvqvpYVuVFroRqUp0R/S14nGE+gIHAAAAABJRU5ErkJggg==\",\r\n      \"ScreenshotPath\": \"imageRepo-screenshots\\\\736978e4-f48f-4c10-9f1f-a1e63ec917e5.png\"\r\n    },\r\n    {\r\n      \"Id\": \"da3cc986-f7f2-4093-b9d3-fe3c92375722\",\r\n      \"Name\": \"Main2\",\r\n      \"Screenshot\": \"iVBORw0KGgoAAAANSUhEUgAAAB8AAAASCAYAAACjMAXnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEGSURBVEhL7ZE9DoJAEIU5knoBtVUL7aT3p1QTtVFbUXs9gtBJQSOtnoArKD03GPM2mc2yixUoDS8hLI+Z/ebHohJl6cY/VcFLUQruOHsaDPqqJeVer1//sZIkoV63Q1EU6b8yZcBte2gk41L408kk5eeVAd9tN7ReLVWbno8HnY6H38M9zxVdxnEs/fF4RGF4T40dXqNeEw8XyxNCLp99/ybjgiCQ+ZABRwD2e7mchfd+v8TleH/bOQrBqnQ49s+FYXp6fiZcBWV5EC7jjrgrHa5OUP+GMuF8xgp4zypc74LzCoNzZ+r4GYi1qHvGeAuFQ4v5TAarcAaiuHarKeJyw/+tCl6KPh09CPgiQpGLAAAAAElFTkSuQmCC\",\r\n      \"ScreenshotPath\": \"imageRepo-screenshots\\\\bc39b0c2-ab9a-4fab-9b44-5316e20b2df3.png\"\r\n    },\r\n    {\r\n      \"Id\": \"d7b06b17-c927-48a7-98a4-2046c652c69b\",\r\n      \"Name\": \"Line\",\r\n      \"Screenshot\": \"iVBORw0KGgoAAAANSUhEUgAAAEkAAAAHCAYAAABEIWDAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAySURBVEhLY/g/CggCBnSBUYAJRgOJCMDAEPf6/ygmgDEERjEmfnj/7v9RjB+PlklEAADYFOBX9EQMrAAAAABJRU5ErkJggg==\",\r\n      \"ScreenshotPath\": \"imageRepo-screenshots\\\\de301bf0-40e0-43b4-be91-f7fbefa431c5.png\"\r\n    }\r\n  ],\r\n  \"Version\": 1\r\n}",
    "ImportMetadata": {},
    "Name": "imgrepo"
  },
  "ConnectionReferences": []
}
