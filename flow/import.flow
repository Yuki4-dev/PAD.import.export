SET IsDebug TO 1
SET DesignWidth TO 1920
SET DesignHeight TO 1080
SET DesignDPI TO 100
Scripting.RunPowershellScript.RunPowershellScript Script: $'''# PowerShellでDPIと解像度を取得
Add-Type -AssemblyName System.Windows.Forms
$bounds = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
$workArea = [System.Windows.Forms.Screen]::PrimaryScreen.WorkingArea
$dpiRatio = $bounds.Width / $workArea.Width
$dpiPercent = [Math]::Round($dpiRatio * 100)
Write-Output \"$($bounds.Width),$($bounds.Height),$dpiPercent\"
''' ScriptOutput=> PowershellOutput ScriptError=> PowershellError
IF IsNotEmpty(PowershellError) THEN
    Display.ShowMessageDialog.ShowMessage Title: $'''ERROR''' Message: PowershellError Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False
END
Text.SplitText.SplitWithDelimiter Text: PowershellOutput CustomDelimiter: $''',''' IsRegEx: False Result=> PowershellOutputList
Text.ToNumber Text: PowershellOutputList[0] Number=> DisplayWidth
Text.ToNumber Text: PowershellOutputList[1] Number=> DisplayHeight
Text.ToNumber Text: PowershellOutputList[2] Number=> DPI
SET ScaleX TO (DisplayWidth / DesignWidth) * (DPI / DesignDPI)
SET ScaleY TO (DisplayHeight / DesignHeight) * (DPI / DesignDPI)
IF IsDebug = 1 THEN
    Folder.GetFiles Folder: $'''C:\\Users\\sanak\\Desktop\\pad\\20250724-09-24-53 - Excel2Tabie''' FileFilter: $'''*''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=> Files
ELSE
    Display.SelectFolder Description: $'''インポート対象のフォルダを選択してください。''' IsTopMost: False SelectedFolder=> SelectedFolder ButtonPressed=> ButtonPressed
    Folder.GetFiles Folder: SelectedFolder FileFilter: $'''*''' IncludeSubfolders: False FailOnAccessDenied: True SortBy1: Folder.SortBy.NoSort SortDescending1: False SortBy2: Folder.SortBy.NoSort SortDescending2: False SortBy3: Folder.SortBy.NoSort SortDescending3: False Files=> Files
END
Scripting.RunJavascript.RunJavascript JavascriptCode: $'''var shell = new ActiveXObject(\"WScript.Shell\");
if (!shell.AppActivate(\"Power Automate\")) {
    WScript.Echo(\"指定されたウィンドウが見つかりません: \" + title);
}
'''
Variables.CreateNewList List=> SubFlowList
LOOP FOREACH File IN Files
    IF File['Name'] = $'''metadata''' THEN
        File.ReadTextFromFile.ReadText File: File['Fullname'] Encoding: File.TextFileEncoding.UTF8 Content=> Metadate
        Variables.ConvertJsonToCustomObject Json: Metadate CustomObject=> JsonAsMetadate
    ELSE IF File['Name'] = $'''Main''' THEN
        File.ReadTextFromFile.ReadText File: File['Fullname'] Encoding: File.TextFileEncoding.UTF8 Content=> MainFlow
    ELSE
        File.ReadTextFromFile.ReadText File: File['Fullname'] Encoding: File.TextFileEncoding.UTF8 Content=> SubFlow
        SET SubFlowObj TO { 'Name': File['Name'], 'Flow': SubFlow }
        Variables.AddItemToList Item: SubFlowObj List: SubFlowList
    END
END
UIAutomation.GetWindow.GetForegroundWindow WindowTitle=> WindowTitle WindowInstance=> AutomationWindow
UIAutomation.SetWindowState.SetStateByInstanceOrHandle WindowInstance: AutomationWindow State: UIAutomation.WindowState.Maximized
MouseAndKeyboard.SendMouseClick.ClickAt ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0 X: 40 * ScaleX Y: 170 * ScaleY RelativeTo: MouseAndKeyboard.PositionRelativeTo.ActiveWindow MovementStyle: MouseAndKeyboard.MovementStyle.Instant
MouseAndKeyboard.SendMouseClick.ClickAt ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0 X: 50 * ScaleX Y: 60 * ScaleY RelativeTo: MouseAndKeyboard.PositionRelativeTo.ActiveWindow MovementStyle: MouseAndKeyboard.MovementStyle.Instant
WAIT 1
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: JsonAsMetadate['name'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}{Tab}{Tab}{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
IF IsDebug = 1 THEN
    WAIT 10
ELSE
    WAIT 45
END
UIAutomation.GetWindow.GetForegroundWindow WindowTitle=> WindowTitle WindowInstance=> AutomationWindow
UIAutomation.SetWindowState.SetStateByInstanceOrHandle WindowInstance: AutomationWindow State: UIAutomation.WindowState.Maximized
WAIT 1
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Alt}(){Right}{Right}{Right}{Right}{Enter}{Down}{Down}{Down}{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
WAIT 1
MouseAndKeyboard.SendMouseClick.ClickAt ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0 X: 600 * ScaleX Y: 550 * ScaleY RelativeTo: MouseAndKeyboard.PositionRelativeTo.ActiveWindow MovementStyle: MouseAndKeyboard.MovementStyle.Instant
# ↓MainFlow
Clipboard.SetText Text: MainFlow
MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
WAIT 2
# ↓SubFlow
LOOP FOREACH SubFlowItem IN SubFlowList
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Shift}({Tab}){Shift}({Tab}){Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    WAIT 1
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: SubFlowItem['Name'] DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Tab}{Enter}''' DelayBetweenKeystrokes: 200 SendTextAsHardwareKeys: True
    WAIT 1
    Clipboard.SetText Text: SubFlowItem['Flow']
    MouseAndKeyboard.SendMouseClick.ClickAt ClickType: MouseAndKeyboard.MouseClickType.LeftClick MillisecondsDelay: 0 X: 600 * ScaleX Y: 550 * ScaleY RelativeTo: MouseAndKeyboard.PositionRelativeTo.ActiveWindow MovementStyle: MouseAndKeyboard.MovementStyle.Instant
    MouseAndKeyboard.SendKeys.FocusAndSendKeys TextToSend: $'''{Control}({V})''' DelayBetweenKeystrokes: 10 SendTextAsHardwareKeys: False
    WAIT 1
END
Display.ShowMessageDialog.ShowMessage Title: $'''完了''' Message: $'''正常にインポートできました。''' Icon: Display.Icon.None Buttons: Display.Buttons.OK DefaultButton: Display.DefaultButton.Button1 IsTopMost: False
